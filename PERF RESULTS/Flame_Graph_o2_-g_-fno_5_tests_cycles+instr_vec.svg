<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="246" onload="init(evt)" viewBox="0 0 1200 246" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="246.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="229" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="229" > </text>
<g id="frames">
<g >
<title>__mod_memcg_state (16,156,886 samples, 0.01%)</title><rect x="1175.7" y="85" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1178.74" y="95.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (178,301,268 samples, 0.12%)</title><rect x="51.9" y="165" width="1.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="54.94" y="175.5" ></text>
</g>
<g >
<title>main (146,948,993,732 samples, 94.87%)</title><rect x="56.1" y="117" width="1119.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="59.06" y="127.5" >main</text>
</g>
<g >
<title>__radix_tree_lookup (16,246,533 samples, 0.01%)</title><rect x="29.0" y="149" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="31.98" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (13,336,405 samples, 0.01%)</title><rect x="19.3" y="149" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="22.34" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (22,710,874 samples, 0.01%)</title><rect x="15.5" y="133" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.48" y="143.5" ></text>
</g>
<g >
<title>__add_to_page_cache_locked (17,315,591 samples, 0.01%)</title><rect x="26.7" y="149" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="29.69" y="159.5" ></text>
</g>
<g >
<title>[unknown] (19,031,980 samples, 0.01%)</title><rect x="25.9" y="165" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.86" y="175.5" ></text>
</g>
<g >
<title>[unknown]  (304,922,292 samples, 0.20%)</title><rect x="17.4" y="165" width="2.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="20.36" y="175.5" ></text>
</g>
<g >
<title>node_dirty_ok (14,614,428 samples, 0.01%)</title><rect x="38.5" y="149" width="0.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="41.54" y="159.5" ></text>
</g>
<g >
<title>omp_get_wtime (42,829,105 samples, 0.03%)</title><rect x="1153.7" y="53" width="0.3" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1156.71" y="63.5" ></text>
</g>
<g >
<title>omp_get_wtime (70,122,272 samples, 0.05%)</title><rect x="1179.3" y="149" width="0.6" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1182.32" y="159.5" ></text>
</g>
<g >
<title>powf (365,344,353 samples, 0.24%)</title><rect x="128.7" y="69" width="2.8" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="131.72" y="79.5" ></text>
</g>
<g >
<title>RTW_CMD_THREAD (151,874,935 samples, 0.10%)</title><rect x="12.8" y="181" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="15.80" y="191.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (23,019,783 samples, 0.01%)</title><rect x="50.9" y="165" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="53.91" y="175.5" ></text>
</g>
<g >
<title>forward (8,381,254,312 samples, 5.41%)</title><rect x="64.1" y="69" width="63.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="67.13" y="79.5" >forward</text>
</g>
<g >
<title>kworker/1:1H-kb (31,711,109 samples, 0.02%)</title><rect x="21.8" y="181" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="24.76" y="191.5" ></text>
</g>
<g >
<title>clock_gettime (53,533,493 samples, 0.03%)</title><rect x="1182.4" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1185.38" y="159.5" ></text>
</g>
<g >
<title>build_tokenizer (24,236,986 samples, 0.02%)</title><rect x="56.1" y="101" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="59.06" y="111.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (42,189,877 samples, 0.03%)</title><rect x="35.5" y="149" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="38.47" y="159.5" ></text>
</g>
<g >
<title>kworker/u8:2-ev (234,989,203 samples, 0.15%)</title><rect x="22.4" y="181" width="1.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="25.38" y="191.5" ></text>
</g>
<g >
<title>xfce4-panel (17,636,055 samples, 0.01%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1192.84" y="191.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (25,845,588 samples, 0.02%)</title><rect x="1181.8" y="149" width="0.2" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1184.78" y="159.5" ></text>
</g>
<g >
<title>check_preemption_disabled (47,549,214 samples, 0.03%)</title><rect x="1176.7" y="85" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1179.75" y="95.5" ></text>
</g>
<g >
<title>softmax (66,448,289 samples, 0.04%)</title><rect x="1156.1" y="53" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1159.15" y="63.5" ></text>
</g>
<g >
<title>__fget_light (13,280,342 samples, 0.01%)</title><rect x="11.2" y="133" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="14.21" y="143.5" ></text>
</g>
<g >
<title>dma_direct_unmap_sg (16,547,878 samples, 0.01%)</title><rect x="1187.2" y="133" width="0.1" height="15.0" fill="rgb(214,45,10)" rx="2" ry="2" />
<text  x="1190.20" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (19,868,613 samples, 0.01%)</title><rect x="40.1" y="165" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="43.12" y="175.5" ></text>
</g>
<g >
<title>compare_tokens (44,306,086 samples, 0.03%)</title><rect x="54.4" y="133" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="57.42" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (207,227,706 samples, 0.13%)</title><rect x="1185.5" y="133" width="1.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1188.54" y="143.5" ></text>
</g>
<g >
<title>tick_nohz_idle_enter (14,867,081 samples, 0.01%)</title><rect x="51.8" y="165" width="0.1" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="54.83" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (147,420,771,534 samples, 95.17%)</title><rect x="55.9" y="133" width="1123.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.92" y="143.5" >[libc.so.6]</text>
</g>
<g >
<title>__this_cpu_preempt_check (57,243,383 samples, 0.04%)</title><rect x="1176.2" y="85" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1179.18" y="95.5" ></text>
</g>
<g >
<title>do_page_fault (27,210,389 samples, 0.02%)</title><rect x="1148.2" y="37" width="0.2" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1151.21" y="47.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (17,999,666 samples, 0.01%)</title><rect x="1179.1" y="133" width="0.1" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="1182.07" y="143.5" ></text>
</g>
<g >
<title>write (1,775,494,124 samples, 1.15%)</title><rect x="26.5" y="165" width="13.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="29.51" y="175.5" ></text>
</g>
<g >
<title>__munmap (18,005,554 samples, 0.01%)</title><rect x="55.9" y="101" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="58.92" y="111.5" ></text>
</g>
<g >
<title>[unknown] (19,031,980 samples, 0.01%)</title><rect x="25.9" y="149" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.86" y="159.5" ></text>
</g>
<g >
<title>free (23,068,281 samples, 0.01%)</title><rect x="56.2" y="101" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="59.24" y="111.5" ></text>
</g>
<g >
<title>__fget_light (13,989,837 samples, 0.01%)</title><rect x="26.0" y="133" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="29.02" y="143.5" ></text>
</g>
<g >
<title>NetworkManager (367,407,646 samples, 0.24%)</title><rect x="10.0" y="181" width="2.8" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (17,353,209 samples, 0.01%)</title><rect x="36.8" y="149" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="39.77" y="159.5" ></text>
</g>
<g >
<title>[libdbus-1.so.3.32.2] (39,076,897 samples, 0.03%)</title><rect x="16.1" y="165" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="19.07" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (38,303,047 samples, 0.02%)</title><rect x="1147.3" y="37" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1150.28" y="47.5" ></text>
</g>
<g >
<title>udelay (39,688,665 samples, 0.03%)</title><rect x="13.7" y="165" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="16.65" y="175.5" ></text>
</g>
<g >
<title>sincosf32 (195,615,912 samples, 0.13%)</title><rect x="131.5" y="69" width="1.5" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="134.50" y="79.5" ></text>
</g>
<g >
<title>vmacache_find (22,145,657 samples, 0.01%)</title><rect x="1153.4" y="37" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1156.40" y="47.5" ></text>
</g>
<g >
<title>unmap_page_range (80,791,915 samples, 0.05%)</title><rect x="1178.3" y="85" width="0.6" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1181.33" y="95.5" ></text>
</g>
<g >
<title>__mod_memcg_state (41,978,464 samples, 0.03%)</title><rect x="1145.1" y="37" width="0.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1148.09" y="47.5" ></text>
</g>
<g >
<title>strcmp (141,168,708 samples, 0.09%)</title><rect x="54.8" y="133" width="1.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="57.83" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (46,781,075 samples, 0.03%)</title><rect x="1146.9" y="37" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1149.93" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (21,766,652 samples, 0.01%)</title><rect x="12.9" y="165" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="15.91" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (19,031,980 samples, 0.01%)</title><rect x="25.9" y="133" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="28.86" y="143.5" ></text>
</g>
<g >
<title>main (19,031,980 samples, 0.01%)</title><rect x="25.9" y="117" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="28.86" y="127.5" ></text>
</g>
<g >
<title>[libdbus-1.so.3.32.2] (35,366,359 samples, 0.02%)</title><rect x="16.6" y="149" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="19.57" y="159.5" ></text>
</g>
<g >
<title>[unknown] (22,736,100 samples, 0.01%)</title><rect x="25.6" y="165" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="28.62" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (252,835,082 samples, 0.16%)</title><rect x="54.0" y="149" width="1.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.99" y="159.5" ></text>
</g>
<g >
<title>_IO_fread (15,966,511 samples, 0.01%)</title><rect x="56.1" y="85" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="59.06" y="95.5" ></text>
</g>
<g >
<title>blueman-tray (205,504,034 samples, 0.13%)</title><rect x="14.2" y="181" width="1.5" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="17.17" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (415,193,380 samples, 0.27%)</title><rect x="41.0" y="165" width="3.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="43.99" y="175.5" ></text>
</g>
<g >
<title>rcu_idle_exit (17,793,743 samples, 0.01%)</title><rect x="51.6" y="165" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="54.58" y="175.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (28,976,343 samples, 0.02%)</title><rect x="34.2" y="149" width="0.2" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="37.16" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (71,176,840 samples, 0.05%)</title><rect x="22.6" y="165" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="25.61" y="175.5" ></text>
</g>
<g >
<title>malloc@plt (65,988,372 samples, 0.04%)</title><rect x="1171.3" y="53" width="0.5" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1174.30" y="63.5" ></text>
</g>
<g >
<title>encode (21,232,723 samples, 0.01%)</title><rect x="1175.3" y="85" width="0.2" height="15.0" fill="rgb(245,186,44)" rx="2" ry="2" />
<text  x="1178.30" y="95.5" ></text>
</g>
<g >
<title>panel-8-pulseau (175,017,444 samples, 0.11%)</title><rect x="24.5" y="181" width="1.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="27.46" y="191.5" ></text>
</g>
<g >
<title>check_preemption_disabled (50,757,493 samples, 0.03%)</title><rect x="1147.8" y="37" width="0.4" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1150.78" y="47.5" ></text>
</g>
<g >
<title>[unknown] (147,793,114,394 samples, 95.41%)</title><rect x="54.0" y="165" width="1125.9" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="56.99" y="175.5" >[unknown]</text>
</g>
<g >
<title>preempt_count_add (21,046,748 samples, 0.01%)</title><rect x="39.0" y="149" width="0.1" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="41.96" y="159.5" ></text>
</g>
<g >
<title>_IO_fread (83,989,665 samples, 0.05%)</title><rect x="1179.9" y="165" width="0.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1182.90" y="175.5" ></text>
</g>
<g >
<title>test_generate (146,861,996,411 samples, 94.81%)</title><rect x="56.5" y="101" width="1118.8" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="59.53" y="111.5" >test_generate</text>
</g>
<g >
<title>__rcu_read_unlock (13,849,029 samples, 0.01%)</title><rect x="29.2" y="149" width="0.1" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="32.21" y="159.5" ></text>
</g>
<g >
<title>[dbus-daemon] (43,848,341 samples, 0.03%)</title><rect x="15.7" y="165" width="0.4" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="18.74" y="175.5" ></text>
</g>
<g >
<title>free (18,005,554 samples, 0.01%)</title><rect x="55.9" y="117" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="58.92" y="127.5" ></text>
</g>
<g >
<title>[libc.so.6] (13,764,464 samples, 0.01%)</title><rect x="53.5" y="149" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.54" y="159.5" ></text>
</g>
<g >
<title>ext4_da_write_end (24,886,449 samples, 0.02%)</title><rect x="34.6" y="149" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="37.62" y="159.5" ></text>
</g>
<g >
<title>memcpy (14,727,171 samples, 0.01%)</title><rect x="1182.1" y="165" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1185.15" y="175.5" ></text>
</g>
<g >
<title>jbd2__journal_start (16,093,285 samples, 0.01%)</title><rect x="37.1" y="149" width="0.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="40.09" y="159.5" ></text>
</g>
<g >
<title>nm-applet (36,605,052 samples, 0.02%)</title><rect x="24.2" y="181" width="0.3" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="27.18" y="191.5" ></text>
</g>
<g >
<title>write (75,744,297 samples, 0.05%)</title><rect x="1182.9" y="165" width="0.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1185.86" y="175.5" ></text>
</g>
<g >
<title>test_prompt_encodings (25,386,805 samples, 0.02%)</title><rect x="1175.3" y="101" width="0.2" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1178.30" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (14,727,171 samples, 0.01%)</title><rect x="1182.1" y="149" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.15" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (21,311,943 samples, 0.01%)</title><rect x="25.6" y="133" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="28.62" y="143.5" ></text>
</g>
<g >
<title>__poll (66,715,108 samples, 0.04%)</title><rect x="26.0" y="165" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.00" y="175.5" ></text>
</g>
<g >
<title>forward (10,033,915,659 samples, 6.48%)</title><rect x="56.6" y="85" width="76.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="59.60" y="95.5" >forward</text>
</g>
<g >
<title>start_this_handle (14,666,752 samples, 0.01%)</title><rect x="39.4" y="149" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="42.35" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (142,686,101 samples, 0.09%)</title><rect x="1184.5" y="133" width="1.0" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1187.46" y="143.5" ></text>
</g>
<g >
<title>memset (62,222,555 samples, 0.04%)</title><rect x="128.2" y="69" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="131.25" y="79.5" ></text>
</g>
<g >
<title>build_tokenizer (157,315,166 samples, 0.10%)</title><rect x="1180.6" y="165" width="1.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1183.59" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (83,308,518 samples, 0.05%)</title><rect x="44.2" y="165" width="0.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="47.15" y="175.5" ></text>
</g>
<g >
<title>[unknown] (33,975,029 samples, 0.02%)</title><rect x="12.5" y="165" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="15.53" y="175.5" ></text>
</g>
<g >
<title>get_page_from_freelist (26,303,257 samples, 0.02%)</title><rect x="1149.7" y="37" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1152.66" y="47.5" ></text>
</g>
<g >
<title>[unknown]  (225,980,452 samples, 0.15%)</title><rect x="10.4" y="149" width="1.7" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.36" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (118,831,321 samples, 0.08%)</title><rect x="14.4" y="165" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.41" y="175.5" ></text>
</g>
<g >
<title>testc_vec (148,343,995,151 samples, 95.77%)</title><rect x="53.4" y="181" width="1130.0" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="56.37" y="191.5" >testc_vec</text>
</g>
<g >
<title>arch_cpu_idle (791,612,780 samples, 0.51%)</title><rect x="44.8" y="165" width="6.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="47.79" y="175.5" ></text>
</g>
<g >
<title>kworker/0:2-eve (146,733,879 samples, 0.09%)</title><rect x="20.3" y="181" width="1.2" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="23.35" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (186,877,578 samples, 0.12%)</title><rect x="30.5" y="149" width="1.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="33.51" y="159.5" ></text>
</g>
<g >
<title>___might_sleep (20,818,911 samples, 0.01%)</title><rect x="26.5" y="149" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="29.53" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (15,863,745 samples, 0.01%)</title><rect x="24.2" y="149" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="27.25" y="159.5" ></text>
</g>
<g >
<title>kworker/1:0-mm_ (28,233,931 samples, 0.02%)</title><rect x="21.5" y="181" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="24.54" y="191.5" ></text>
</g>
<g >
<title>__handle_mm_fault (27,142,166 samples, 0.02%)</title><rect x="1144.3" y="37" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1147.35" y="47.5" ></text>
</g>
<g >
<title>[unknown]  (150,296,257 samples, 0.10%)</title><rect x="24.5" y="165" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="27.47" y="175.5" ></text>
</g>
<g >
<title>ext4_inode_csum (14,489,638 samples, 0.01%)</title><rect x="35.2" y="149" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="38.18" y="159.5" ></text>
</g>
<g >
<title>__cxa_atexit@plt (15,228,269 samples, 0.01%)</title><rect x="1182.3" y="149" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1185.26" y="159.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (13,197,816 samples, 0.01%)</title><rect x="26.8" y="149" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="29.82" y="159.5" ></text>
</g>
<g >
<title>sample_topp (129,329,556 samples, 0.08%)</title><rect x="1156.7" y="69" width="0.9" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1159.66" y="79.5" ></text>
</g>
<g >
<title>__mark_inode_dirty (13,277,722 samples, 0.01%)</title><rect x="28.5" y="149" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="31.52" y="159.5" ></text>
</g>
<g >
<title>clock_gettime (27,230,602 samples, 0.02%)</title><rect x="1181.8" y="165" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1184.78" y="175.5" ></text>
</g>
<g >
<title>[python3.11] (15,496,200 samples, 0.01%)</title><rect x="14.3" y="165" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="17.30" y="175.5" ></text>
</g>
<g >
<title>nl_sendmsg (790,285,744 samples, 0.51%)</title><rect x="1183.8" y="165" width="6.0" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1186.82" y="175.5" ></text>
</g>
<g >
<title>sample.part.0 (341,900,583 samples, 0.22%)</title><rect x="1154.1" y="69" width="2.6" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1157.05" y="79.5" ></text>
</g>
<g >
<title>__asm_copy_to_user (83,426,351 samples, 0.05%)</title><rect x="26.9" y="149" width="0.7" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="29.92" y="159.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (35,847,189 samples, 0.02%)</title><rect x="28.6" y="149" width="0.3" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="31.62" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock (14,768,721 samples, 0.01%)</title><rect x="1146.8" y="37" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1149.77" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (36,560,898 samples, 0.02%)</title><rect x="13.1" y="165" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="16.08" y="175.5" ></text>
</g>
<g >
<title>[unknown] (13,450,387 samples, 0.01%)</title><rect x="16.8" y="149" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="19.85" y="159.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (25,340,058 samples, 0.02%)</title><rect x="1146.1" y="37" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1149.05" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_lock (30,086,016 samples, 0.02%)</title><rect x="29.6" y="149" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="32.55" y="159.5" ></text>
</g>
<g >
<title>matmul (133,738,428,817 samples, 86.34%)</title><rect x="134.9" y="53" width="1018.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="137.91" y="63.5" >matmul</text>
</g>
<g >
<title>release_pages (50,757,974 samples, 0.03%)</title><rect x="1177.9" y="85" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1180.91" y="95.5" ></text>
</g>
<g >
<title>__poll (66,403,627 samples, 0.04%)</title><rect x="26.0" y="149" width="0.5" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="29.00" y="159.5" ></text>
</g>
<g >
<title>__munmap (18,450,634 samples, 0.01%)</title><rect x="56.3" y="85" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="59.28" y="95.5" ></text>
</g>
<g >
<title>crc32_body (129,483,200 samples, 0.08%)</title><rect x="32.8" y="149" width="1.0" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="35.77" y="159.5" ></text>
</g>
<g >
<title>RTW_RECV_THREAD (13,746,269 samples, 0.01%)</title><rect x="14.0" y="181" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="16.96" y="191.5" ></text>
</g>
<g >
<title>test_generate (453,772,248 samples, 0.29%)</title><rect x="1175.5" y="117" width="3.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1178.49" y="127.5" ></text>
</g>
<g >
<title>[unknown]  (30,350,286 samples, 0.02%)</title><rect x="16.6" y="133" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="19.58" y="143.5" ></text>
</g>
<g >
<title>[unknown] (72,413,262 samples, 0.05%)</title><rect x="16.5" y="165" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="19.45" y="175.5" ></text>
</g>
<g >
<title>__mod_node_page_state (46,150,954 samples, 0.03%)</title><rect x="1145.4" y="37" width="0.4" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1148.41" y="47.5" ></text>
</g>
<g >
<title>gdbus (343,335,141 samples, 0.22%)</title><rect x="17.4" y="181" width="2.6" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="20.36" y="191.5" ></text>
</g>
<g >
<title>__this_cpu_preempt_check (67,841,466 samples, 0.04%)</title><rect x="1146.2" y="37" width="0.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1149.25" y="47.5" ></text>
</g>
<g >
<title>[perf] (14,618,170 samples, 0.01%)</title><rect x="25.9" y="53" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="28.89" y="63.5" ></text>
</g>
<g >
<title>dbus-daemon (213,142,792 samples, 0.14%)</title><rect x="15.7" y="181" width="1.7" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="18.74" y="191.5" ></text>
</g>
<g >
<title>_IO_fread (58,655,730 samples, 0.04%)</title><rect x="1180.1" y="149" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1183.06" y="159.5" ></text>
</g>
<g >
<title>generate (136,814,698,213 samples, 88.32%)</title><rect x="133.0" y="85" width="1042.3" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="136.03" y="95.5" >generate</text>
</g>
<g >
<title>[unknown] (45,431,018 samples, 0.03%)</title><rect x="15.3" y="165" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.32" y="175.5" ></text>
</g>
<g >
<title>[unknown]  (33,170,238 samples, 0.02%)</title><rect x="19.7" y="133" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.69" y="143.5" ></text>
</g>
<g >
<title>do_set_pte (18,920,662 samples, 0.01%)</title><rect x="1148.4" y="37" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1151.42" y="47.5" ></text>
</g>
<g >
<title>perf (1,867,138,074 samples, 1.21%)</title><rect x="25.8" y="181" width="14.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="28.81" y="191.5" ></text>
</g>
<g >
<title>softmax (454,714,042 samples, 0.29%)</title><rect x="1171.8" y="53" width="3.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1174.80" y="63.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (66,050,019 samples, 0.04%)</title><rect x="20.4" y="165" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="23.42" y="175.5" ></text>
</g>
<g >
<title>udelay (164,009,964 samples, 0.11%)</title><rect x="1188.6" y="133" width="1.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1191.57" y="143.5" ></text>
</g>
<g >
<title>__rcu_read_lock (13,673,831 samples, 0.01%)</title><rect x="29.1" y="149" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="32.10" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (83,761,178 samples, 0.05%)</title><rect x="14.5" y="149" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.50" y="159.5" ></text>
</g>
<g >
<title>get_page_from_freelist (32,780,929 samples, 0.02%)</title><rect x="36.4" y="149" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="39.39" y="159.5" ></text>
</g>
<g >
<title>__block_commit_write.constprop.0.isra.0 (17,400,018 samples, 0.01%)</title><rect x="27.6" y="149" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="30.56" y="159.5" ></text>
</g>
<g >
<title>[unknown] (147,430,002,459 samples, 95.18%)</title><rect x="55.9" y="149" width="1123.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="58.92" y="159.5" >[unknown]</text>
</g>
<g >
<title>memcpy (19,050,728 samples, 0.01%)</title><rect x="53.8" y="149" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="56.75" y="159.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (52,498,406 samples, 0.03%)</title><rect x="40.5" y="165" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="43.53" y="175.5" ></text>
</g>
<g >
<title>[unknown] (13,965,593 samples, 0.01%)</title><rect x="1183.6" y="165" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1186.57" y="175.5" ></text>
</g>
<g >
<title>kworker/3:0-eve (39,858,474 samples, 0.03%)</title><rect x="22.0" y="181" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="25.04" y="191.5" ></text>
</g>
<g >
<title>[unknown] (38,412,849 samples, 0.02%)</title><rect x="19.7" y="165" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="22.68" y="175.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (24,468,134 samples, 0.02%)</title><rect x="1175.6" y="85" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1178.55" y="95.5" ></text>
</g>
<g >
<title>__mod_node_page_state (28,160,336 samples, 0.02%)</title><rect x="1175.9" y="85" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1178.86" y="95.5" ></text>
</g>
<g >
<title>[unknown]  (35,986,785 samples, 0.02%)</title><rect x="15.4" y="149" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.39" y="159.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (21,680,042 samples, 0.01%)</title><rect x="1144.1" y="37" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1147.11" y="47.5" ></text>
</g>
<g >
<title>[perf] (19,031,980 samples, 0.01%)</title><rect x="25.9" y="85" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="28.86" y="95.5" ></text>
</g>
<g >
<title>wpa_supplicant (841,485,341 samples, 0.54%)</title><rect x="1183.4" y="181" width="6.4" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1186.43" y="191.5" ></text>
</g>
<g >
<title>__block_write_begin_int (18,898,384 samples, 0.01%)</title><rect x="27.7" y="149" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="30.74" y="159.5" ></text>
</g>
<g >
<title>softmax (2,313,586,666 samples, 1.49%)</title><rect x="1157.6" y="69" width="17.7" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1160.64" y="79.5" ></text>
</g>
<g >
<title>[unknown]  (33,631,787 samples, 0.02%)</title><rect x="19.7" y="149" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="22.69" y="159.5" ></text>
</g>
<g >
<title>[dbus-daemon] (15,273,391 samples, 0.01%)</title><rect x="16.5" y="149" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="19.45" y="159.5" ></text>
</g>
<g >
<title>forward (202,038,963 samples, 0.13%)</title><rect x="133.1" y="69" width="1.5" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="136.10" y="79.5" ></text>
</g>
<g >
<title>lock_page_memcg (18,461,979 samples, 0.01%)</title><rect x="1150.4" y="37" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1153.40" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (20,763,466 samples, 0.01%)</title><rect x="1179.9" y="149" width="0.2" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1182.90" y="159.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (14,767,214 samples, 0.01%)</title><rect x="1149.5" y="37" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1152.55" y="47.5" ></text>
</g>
<g >
<title>strcmp (13,847,536 samples, 0.01%)</title><rect x="1175.4" y="69" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1178.35" y="79.5" ></text>
</g>
<g >
<title>clock_gettime (52,585,477 samples, 0.03%)</title><rect x="1179.4" y="133" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.43" y="143.5" ></text>
</g>
<g >
<title>[unknown]  (21,311,943 samples, 0.01%)</title><rect x="25.6" y="149" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="28.62" y="159.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (28,825,246 samples, 0.02%)</title><rect x="34.4" y="149" width="0.2" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="37.40" y="159.5" ></text>
</g>
<g >
<title>expf (1,789,652,055 samples, 1.16%)</title><rect x="1157.7" y="53" width="13.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1160.67" y="63.5" ></text>
</g>
<g >
<title>page_add_file_rmap (68,764,975 samples, 0.04%)</title><rect x="1152.5" y="37" width="0.5" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1155.48" y="47.5" ></text>
</g>
<g >
<title>iov_iter_fault_in_readable (22,722,484 samples, 0.01%)</title><rect x="36.9" y="149" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="39.90" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (53,059,062 samples, 0.03%)</title><rect x="54.0" y="133" width="0.4" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.99" y="143.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (42,914,120 samples, 0.03%)</title><rect x="1144.8" y="37" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1147.76" y="47.5" ></text>
</g>
<g >
<title>[unknown]  (25,646,419 samples, 0.02%)</title><rect x="12.6" y="149" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="15.55" y="159.5" ></text>
</g>
<g >
<title>_raw_read_lock (15,093,840 samples, 0.01%)</title><rect x="29.4" y="149" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="32.40" y="159.5" ></text>
</g>
<g >
<title>swapper (1,695,171,415 samples, 1.09%)</title><rect x="40.4" y="181" width="12.9" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="43.43" y="191.5" ></text>
</g>
<g >
<title>__find_get_block (18,488,829 samples, 0.01%)</title><rect x="28.3" y="149" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="31.28" y="159.5" ></text>
</g>
<g >
<title>[libc.so.6] (79,677,716 samples, 0.05%)</title><rect x="53.4" y="165" width="0.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="56.39" y="175.5" ></text>
</g>
<g >
<title>[unknown]  (26,367,243 samples, 0.02%)</title><rect x="24.2" y="165" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="27.20" y="175.5" ></text>
</g>
<g >
<title>unlock_page (13,853,196 samples, 0.01%)</title><rect x="39.6" y="149" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="42.62" y="159.5" ></text>
</g>
<g >
<title>page_remove_rmap (69,247,506 samples, 0.04%)</title><rect x="1177.4" y="85" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1180.38" y="95.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (15,229,671 samples, 0.01%)</title><rect x="1144.6" y="37" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1147.60" y="47.5" ></text>
</g>
<g >
<title>[NetworkManager] (18,875,366 samples, 0.01%)</title><rect x="10.0" y="165" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>[unknown]  (196,703,110 samples, 0.13%)</title><rect x="17.8" y="149" width="1.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="20.76" y="159.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (72,331,732 samples, 0.05%)</title><rect x="37.5" y="149" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="40.50" y="159.5" ></text>
</g>
<g >
<title>mmc_io_rw_extended (21,132,088 samples, 0.01%)</title><rect x="1187.6" y="133" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1190.57" y="143.5" ></text>
</g>
<g >
<title>__test_set_page_writeback (19,659,976 samples, 0.01%)</title><rect x="22.4" y="165" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="25.42" y="175.5" ></text>
</g>
<g >
<title>_IO_fread (157,315,166 samples, 0.10%)</title><rect x="1180.6" y="149" width="1.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1183.59" y="159.5" ></text>
</g>
<g >
<title>expf (980,172,305 samples, 0.63%)</title><rect x="56.6" y="69" width="7.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="59.64" y="79.5" ></text>
</g>
<g >
<title>malloc@plt (33,612,336 samples, 0.02%)</title><rect x="128.0" y="69" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="130.97" y="79.5" ></text>
</g>
<g >
<title>matmul (133,817,224,263 samples, 86.39%)</title><rect x="134.6" y="69" width="1019.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="137.64" y="79.5" >matmul</text>
</g>
<g >
<title>[unknown]  (312,284,002 samples, 0.20%)</title><rect x="10.2" y="165" width="2.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.15" y="175.5" ></text>
</g>
<g >
<title>omp_get_wtime (72,452,529 samples, 0.05%)</title><rect x="1182.3" y="165" width="0.5" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1185.26" y="175.5" ></text>
</g>
<g >
<title>__munmap (452,850,406 samples, 0.29%)</title><rect x="1175.5" y="101" width="3.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1178.50" y="111.5" ></text>
</g>
<g >
<title>rmsnorm (123,137,711 samples, 0.08%)</title><rect x="133.1" y="53" width="0.9" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="136.10" y="63.5" ></text>
</g>
<g >
<title>rcu_preempt (39,619,042 samples, 0.03%)</title><rect x="40.1" y="181" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="43.09" y="191.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (17,329,487 samples, 0.01%)</title><rect x="23.2" y="165" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="26.18" y="175.5" ></text>
</g>
<g >
<title>[perf] (19,031,980 samples, 0.01%)</title><rect x="25.9" y="69" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="28.86" y="79.5" ></text>
</g>
<g >
<title>pagecache_get_page (14,968,379 samples, 0.01%)</title><rect x="38.7" y="149" width="0.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="41.73" y="159.5" ></text>
</g>
<g >
<title>clock_gettime (17,999,666 samples, 0.01%)</title><rect x="1179.1" y="149" width="0.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1182.07" y="159.5" ></text>
</g>
<g >
<title>filemap_map_pages (111,680,896 samples, 0.07%)</title><rect x="1148.7" y="37" width="0.8" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1151.66" y="47.5" ></text>
</g>
<g >
<title>all (154,899,600,298 samples, 100%)</title><rect x="10.0" y="197" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (13,758,008 samples, 0.01%)</title><rect x="11.5" y="133" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="14.50" y="143.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (26,225,567 samples, 0.02%)</title><rect x="32.4" y="149" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="35.36" y="159.5" ></text>
</g>
<g >
<title>next_uptodate_page (222,908,635 samples, 0.14%)</title><rect x="1150.8" y="37" width="1.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1153.77" y="47.5" ></text>
</g>
<g >
<title>[unknown]  (790,285,744 samples, 0.51%)</title><rect x="1183.8" y="149" width="6.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1186.82" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (107,390,746 samples, 0.07%)</title><rect x="24.7" y="149" width="0.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="27.68" y="159.5" ></text>
</g>
<g >
<title>__isoc99_sscanf@plt (35,966,341 samples, 0.02%)</title><rect x="134.6" y="53" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="137.64" y="63.5" ></text>
</g>
<g >
<title>mark_buffer_dirty (18,075,070 samples, 0.01%)</title><rect x="38.3" y="149" width="0.1" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="41.29" y="159.5" ></text>
</g>
<g >
<title>softmax (78,439,820 samples, 0.05%)</title><rect x="134.0" y="53" width="0.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="137.04" y="63.5" ></text>
</g>
<g >
<title>[dbus-daemon] (21,411,757 samples, 0.01%)</title><rect x="15.8" y="149" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="18.76" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (84,747,253 samples, 0.05%)</title><rect x="29.9" y="149" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="32.86" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (25,185,775 samples, 0.02%)</title><rect x="12.6" y="133" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="15.55" y="143.5" ></text>
</g>
<g >
<title>__cxa_atexit@plt (13,845,998 samples, 0.01%)</title><rect x="1179.3" y="133" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1182.32" y="143.5" ></text>
</g>
<g >
<title>handle_mm_fault (60,805,163 samples, 0.04%)</title><rect x="1149.9" y="37" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1152.87" y="47.5" ></text>
</g>
<g >
<title>[perf] (19,031,980 samples, 0.01%)</title><rect x="25.9" y="101" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="28.86" y="111.5" ></text>
</g>
<g >
<title>_save_context (23,534,556 samples, 0.02%)</title><rect x="1147.6" y="37" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1150.58" y="47.5" ></text>
</g>
</g>
</svg>
