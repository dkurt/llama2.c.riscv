<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="230" onload="init(evt)" viewBox="0 0 1200 230" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="230.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="213" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="213" > </text>
<g id="frames">
<g >
<title>[unknown] (95,307,045 samples, 0.04%)</title><rect x="15.5" y="149" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="18.46" y="159.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (23,075,235 samples, 0.01%)</title><rect x="1158.3" y="37" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1161.25" y="47.5" ></text>
</g>
<g >
<title>[unknown]  (25,034,303 samples, 0.01%)</title><rect x="14.7" y="117" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.69" y="127.5" ></text>
</g>
<g >
<title>[libdbus-1.so.3.32.2] (55,655,495 samples, 0.02%)</title><rect x="15.5" y="133" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="18.55" y="143.5" ></text>
</g>
<g >
<title>filemap_map_pages (103,384,236 samples, 0.04%)</title><rect x="1160.7" y="37" width="0.5" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1163.70" y="47.5" ></text>
</g>
<g >
<title>[unknown]  (36,657,872 samples, 0.01%)</title><rect x="18.0" y="133" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="20.98" y="143.5" ></text>
</g>
<g >
<title>__find_get_block (26,295,135 samples, 0.01%)</title><rect x="25.5" y="133" width="0.1" height="15.0" fill="rgb(219,65,15)" rx="2" ry="2" />
<text  x="28.50" y="143.5" ></text>
</g>
<g >
<title>__mod_node_page_state (36,461,572 samples, 0.01%)</title><rect x="1158.8" y="37" width="0.2" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1161.80" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (243,859,433,942 samples, 95.93%)</title><rect x="50.3" y="117" width="1132.0" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.34" y="127.5" >[libc.so.6]</text>
</g>
<g >
<title>[perf] (28,907,987 samples, 0.01%)</title><rect x="23.7" y="53" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.71" y="63.5" ></text>
</g>
<g >
<title>__handle_mm_fault (26,307,263 samples, 0.01%)</title><rect x="1158.1" y="37" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1161.13" y="47.5" ></text>
</g>
<g >
<title>kworker/3:2-mm_ (66,228,396 samples, 0.03%)</title><rect x="20.2" y="165" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="23.16" y="175.5" ></text>
</g>
<g >
<title>_IO_fread (167,130,355 samples, 0.07%)</title><rect x="1182.8" y="133" width="0.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1185.81" y="143.5" ></text>
</g>
<g >
<title>[unknown]  (249,904,124 samples, 0.10%)</title><rect x="16.5" y="133" width="1.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="19.47" y="143.5" ></text>
</g>
<g >
<title>[unknown] (57,978,500 samples, 0.02%)</title><rect x="14.6" y="149" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="17.56" y="159.5" ></text>
</g>
<g >
<title>[perf] (29,311,231 samples, 0.01%)</title><rect x="23.7" y="85" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.71" y="95.5" ></text>
</g>
<g >
<title>__poll (81,178,102 samples, 0.03%)</title><rect x="23.8" y="149" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="26.84" y="159.5" ></text>
</g>
<g >
<title>__this_cpu_preempt_check (52,630,905 samples, 0.02%)</title><rect x="1180.6" y="69" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1183.61" y="79.5" ></text>
</g>
<g >
<title>[unknown] (29,311,231 samples, 0.01%)</title><rect x="23.7" y="133" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="26.71" y="143.5" ></text>
</g>
<g >
<title>swapper (3,265,157,502 samples, 1.28%)</title><rect x="33.7" y="165" width="15.1" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="36.66" y="175.5" ></text>
</g>
<g >
<title>tick_nohz_idle_exit (167,837,888 samples, 0.07%)</title><rect x="48.0" y="149" width="0.8" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="50.98" y="159.5" ></text>
</g>
<g >
<title>__munmap (464,412,672 samples, 0.18%)</title><rect x="1180.1" y="85" width="2.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1183.13" y="95.5" ></text>
</g>
<g >
<title>rcu_idle_exit (28,539,640 samples, 0.01%)</title><rect x="47.5" y="149" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="50.51" y="159.5" ></text>
</g>
<g >
<title>check_preemption_disabled (42,474,877 samples, 0.02%)</title><rect x="1180.9" y="69" width="0.2" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1183.93" y="79.5" ></text>
</g>
<g >
<title>RTW_CMD_THREAD (242,206,281 samples, 0.10%)</title><rect x="12.2" y="165" width="1.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="15.24" y="175.5" ></text>
</g>
<g >
<title>[unknown]  (105,013,480 samples, 0.04%)</title><rect x="11.7" y="133" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.72" y="143.5" ></text>
</g>
<g >
<title>softmax (431,628,184 samples, 0.17%)</title><rect x="1178.0" y="37" width="2.0" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1180.99" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (26,102,806 samples, 0.01%)</title><rect x="33.4" y="149" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="36.36" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (37,341,678 samples, 0.01%)</title><rect x="20.6" y="149" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="23.55" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (339,291,677 samples, 0.13%)</title><rect x="10.1" y="149" width="1.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.13" y="159.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (29,084,675 samples, 0.01%)</title><rect x="1180.2" y="69" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1183.15" y="79.5" ></text>
</g>
<g >
<title>_IO_fread (48,753,386 samples, 0.02%)</title><rect x="1182.5" y="133" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1185.55" y="143.5" ></text>
</g>
<g >
<title>clear_page_dirty_for_io (32,194,925 samples, 0.01%)</title><rect x="21.6" y="149" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="24.58" y="159.5" ></text>
</g>
<g >
<title>do_set_pte (23,538,595 samples, 0.01%)</title><rect x="1160.5" y="37" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1163.54" y="47.5" ></text>
</g>
<g >
<title>sincosf32 (191,505,640 samples, 0.08%)</title><rect x="1165.6" y="53" width="0.9" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1168.57" y="63.5" ></text>
</g>
<g >
<title>NetworkManager (483,083,081 samples, 0.19%)</title><rect x="10.0" y="165" width="2.2" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>kworker/1:2-mm_ (72,149,276 samples, 0.03%)</title><rect x="19.1" y="165" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="22.08" y="175.5" ></text>
</g>
<g >
<title>[unknown]  (178,397,750 samples, 0.07%)</title><rect x="13.7" y="149" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.73" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (22,030,245 samples, 0.01%)</title><rect x="22.4" y="133" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="25.42" y="143.5" ></text>
</g>
<g >
<title>balance_dirty_pages_ratelimited (33,086,500 samples, 0.01%)</title><rect x="28.2" y="133" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="31.16" y="143.5" ></text>
</g>
<g >
<title>[unknown]  (46,921,819 samples, 0.02%)</title><rect x="15.6" y="117" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="18.56" y="127.5" ></text>
</g>
<g >
<title>[unknown]  (36,657,872 samples, 0.01%)</title><rect x="18.0" y="117" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="20.98" y="127.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (43,386,329 samples, 0.02%)</title><rect x="1158.4" y="37" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1161.38" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (25,680,296 samples, 0.01%)</title><rect x="14.1" y="117" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="17.08" y="127.5" ></text>
</g>
<g >
<title>softmax (60,919,888 samples, 0.02%)</title><rect x="1168.7" y="37" width="0.3" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1171.73" y="47.5" ></text>
</g>
<g >
<title>__mod_memcg_state (46,153,793 samples, 0.02%)</title><rect x="1158.6" y="37" width="0.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1161.59" y="47.5" ></text>
</g>
<g >
<title>strcmp (137,558,711 samples, 0.05%)</title><rect x="49.7" y="117" width="0.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="52.69" y="127.5" ></text>
</g>
<g >
<title>ext4_da_write_begin (24,898,788 samples, 0.01%)</title><rect x="29.5" y="133" width="0.1" height="15.0" fill="rgb(211,32,7)" rx="2" ry="2" />
<text  x="32.45" y="143.5" ></text>
</g>
<g >
<title>udelay (326,482,941 samples, 0.13%)</title><rect x="1188.4" y="117" width="1.5" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="1191.40" y="127.5" ></text>
</g>
<g >
<title>testc (244,582,664,178 samples, 96.21%)</title><rect x="48.8" y="165" width="1135.4" height="15.0" fill="rgb(229,114,27)" rx="2" ry="2" />
<text  x="51.84" y="175.5" >testc</text>
</g>
<g >
<title>[dbus-daemon] (56,165,456 samples, 0.02%)</title><rect x="14.9" y="149" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="17.89" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (1,174,201,322 samples, 0.46%)</title><rect x="1184.5" y="133" width="5.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1187.47" y="143.5" ></text>
</g>
<g >
<title>_IO_fread (75,966,704 samples, 0.03%)</title><rect x="1182.4" y="149" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1185.44" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (89,847,930 samples, 0.04%)</title><rect x="26.6" y="133" width="0.4" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="29.55" y="143.5" ></text>
</g>
<g >
<title>powf (322,506,305 samples, 0.13%)</title><rect x="1164.1" y="53" width="1.5" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1167.07" y="63.5" ></text>
</g>
<g >
<title>[perf] (23,025,285 samples, 0.01%)</title><rect x="23.7" y="37" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.73" y="47.5" ></text>
</g>
<g >
<title>sample_topp (102,533,220 samples, 0.04%)</title><rect x="1169.0" y="53" width="0.5" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1172.02" y="63.5" ></text>
</g>
<g >
<title>test_generate (243,288,771,570 samples, 95.70%)</title><rect x="50.7" y="85" width="1129.3" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="53.71" y="95.5" >test_generate</text>
</g>
<g >
<title>get_page_from_freelist (25,382,609 samples, 0.01%)</title><rect x="1161.3" y="37" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1164.30" y="47.5" ></text>
</g>
<g >
<title>__mod_memcg_state (29,546,942 samples, 0.01%)</title><rect x="1180.3" y="69" width="0.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="1183.29" y="79.5" ></text>
</g>
<g >
<title>kworker/2:2-mm_ (158,951,391 samples, 0.06%)</title><rect x="19.4" y="165" width="0.8" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="22.43" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (240,964,356 samples, 0.09%)</title><rect x="49.2" y="133" width="1.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.22" y="143.5" ></text>
</g>
<g >
<title>ext4_da_write_end (27,825,991 samples, 0.01%)</title><rect x="29.6" y="133" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="32.57" y="143.5" ></text>
</g>
<g >
<title>[libdbus-1.so.3.32.2] (52,285,363 samples, 0.02%)</title><rect x="15.2" y="149" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="18.15" y="159.5" ></text>
</g>
<g >
<title>write (1,960,119,087 samples, 0.77%)</title><rect x="24.2" y="149" width="9.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="27.22" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (100,427,120 samples, 0.04%)</title><rect x="1159.5" y="37" width="0.5" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1162.53" y="47.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (60,360,852 samples, 0.02%)</title><rect x="12.4" y="149" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="15.43" y="159.5" ></text>
</g>
<g >
<title>[perf] (29,311,231 samples, 0.01%)</title><rect x="23.7" y="69" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="26.71" y="79.5" ></text>
</g>
<g >
<title>___might_sleep (23,805,304 samples, 0.01%)</title><rect x="24.2" y="133" width="0.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="27.24" y="143.5" ></text>
</g>
<g >
<title>[unknown]  (105,013,480 samples, 0.04%)</title><rect x="11.7" y="117" width="0.5" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="14.72" y="127.5" ></text>
</g>
<g >
<title>softmax (2,262,749,782 samples, 0.89%)</title><rect x="1169.5" y="53" width="10.5" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1172.49" y="63.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (185,817,180 samples, 0.07%)</title><rect x="33.8" y="149" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="36.84" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (162,832,652 samples, 0.06%)</title><rect x="38.7" y="149" width="0.7" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="41.69" y="159.5" ></text>
</g>
<g >
<title>arch_cpu_idle (1,457,283,216 samples, 0.57%)</title><rect x="39.5" y="149" width="6.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="42.45" y="159.5" ></text>
</g>
<g >
<title>[unknown] (42,054,756 samples, 0.02%)</title><rect x="18.0" y="149" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="20.97" y="159.5" ></text>
</g>
<g >
<title>nm-applet (49,951,321 samples, 0.02%)</title><rect x="22.4" y="165" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="25.37" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_lock (26,653,116 samples, 0.01%)</title><rect x="26.3" y="133" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="29.34" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (73,219,356 samples, 0.03%)</title><rect x="19.5" y="149" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="22.47" y="159.5" ></text>
</g>
<g >
<title>blueman-tray (291,685,141 samples, 0.11%)</title><rect x="13.5" y="165" width="1.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="16.53" y="175.5" ></text>
</g>
<g >
<title>[unknown]  (43,897,595 samples, 0.02%)</title><rect x="14.6" y="133" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="17.62" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (184,421,640 samples, 0.07%)</title><rect x="1184.9" y="117" width="0.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1187.92" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (89,473,003 samples, 0.04%)</title><rect x="21.2" y="149" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="24.16" y="159.5" ></text>
</g>
<g >
<title>malloc@plt (63,238,576 samples, 0.02%)</title><rect x="1177.7" y="37" width="0.3" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1180.70" y="47.5" ></text>
</g>
<g >
<title>[libc.so.6] (49,858,096 samples, 0.02%)</title><rect x="49.2" y="117" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="52.22" y="127.5" ></text>
</g>
<g >
<title>page_add_file_rmap (69,233,047 samples, 0.03%)</title><rect x="1163.0" y="37" width="0.3" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="1166.03" y="47.5" ></text>
</g>
<g >
<title>write (78,636,189 samples, 0.03%)</title><rect x="1183.8" y="149" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1186.79" y="159.5" ></text>
</g>
<g >
<title>rcu_core (26,689,880 samples, 0.01%)</title><rect x="47.4" y="149" width="0.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="50.39" y="159.5" ></text>
</g>
<g >
<title>compare_tokens (42,008,691 samples, 0.02%)</title><rect x="49.5" y="117" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="52.47" y="127.5" ></text>
</g>
<g >
<title>do_idle (22,045,231 samples, 0.01%)</title><rect x="46.7" y="149" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="49.69" y="159.5" ></text>
</g>
<g >
<title>main (243,378,400,896 samples, 95.74%)</title><rect x="50.4" y="101" width="1129.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="53.41" y="111.5" >main</text>
</g>
<g >
<title>kworker/u8:2-fl (115,529,654 samples, 0.05%)</title><rect x="20.5" y="165" width="0.5" height="15.0" fill="rgb(253,225,53)" rx="2" ry="2" />
<text  x="23.47" y="175.5" ></text>
</g>
<g >
<title>[unknown] (29,477,665 samples, 0.01%)</title><rect x="23.7" y="149" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="26.71" y="159.5" ></text>
</g>
<g >
<title>all (254,210,670,702 samples, 100%)</title><rect x="10.0" y="181" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>[unknown]  (199,390,286 samples, 0.08%)</title><rect x="22.6" y="149" width="0.9" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="25.61" y="159.5" ></text>
</g>
<g >
<title>perf (2,079,699,006 samples, 0.82%)</title><rect x="23.7" y="165" width="9.6" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="26.66" y="175.5" ></text>
</g>
<g >
<title>test_prompt_encodings (26,767,813 samples, 0.01%)</title><rect x="1180.0" y="85" width="0.1" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1183.01" y="95.5" ></text>
</g>
<g >
<title>[libc.so.6] (29,311,231 samples, 0.01%)</title><rect x="23.7" y="117" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="26.71" y="127.5" ></text>
</g>
<g >
<title>udelay (76,286,031 samples, 0.03%)</title><rect x="13.0" y="149" width="0.4" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="16.01" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (143,214,807 samples, 0.06%)</title><rect x="22.8" y="133" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="25.78" y="143.5" ></text>
</g>
<g >
<title>get_page_from_freelist (30,579,331 samples, 0.01%)</title><rect x="30.7" y="133" width="0.2" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="33.73" y="143.5" ></text>
</g>
<g >
<title>expf (932,384,771 samples, 0.37%)</title><rect x="50.8" y="53" width="4.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="53.78" y="63.5" ></text>
</g>
<g >
<title>[unknown] (243,859,433,942 samples, 95.93%)</title><rect x="50.3" y="133" width="1132.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="53.34" y="143.5" >[unknown]</text>
</g>
<g >
<title>next_uptodate_page (236,312,293 samples, 0.09%)</title><rect x="1161.9" y="37" width="1.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1164.93" y="47.5" ></text>
</g>
<g >
<title>malloc@plt (31,842,324 samples, 0.01%)</title><rect x="1163.7" y="53" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="1166.71" y="63.5" ></text>
</g>
<g >
<title>RTW_RECV_THREAD (24,458,269 samples, 0.01%)</title><rect x="13.4" y="165" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="16.37" y="175.5" ></text>
</g>
<g >
<title>test_generate (464,412,672 samples, 0.18%)</title><rect x="1180.1" y="101" width="2.2" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="1183.13" y="111.5" ></text>
</g>
<g >
<title>[libc.so.6] (23,692,103 samples, 0.01%)</title><rect x="1182.4" y="133" width="0.1" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1185.44" y="143.5" ></text>
</g>
<g >
<title>release_pages (50,293,153 samples, 0.02%)</title><rect x="1181.6" y="69" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1184.60" y="79.5" ></text>
</g>
<g >
<title>__mod_node_page_state (25,852,651 samples, 0.01%)</title><rect x="1180.4" y="69" width="0.1" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1183.42" y="79.5" ></text>
</g>
<g >
<title>ext4_da_get_block_prep (31,094,590 samples, 0.01%)</title><rect x="29.3" y="133" width="0.1" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="32.30" y="143.5" ></text>
</g>
<g >
<title>sample.part.0 (330,917,460 samples, 0.13%)</title><rect x="1167.5" y="53" width="1.5" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="1170.48" y="63.5" ></text>
</g>
<g >
<title>main (29,311,231 samples, 0.01%)</title><rect x="23.7" y="101" width="0.1" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="26.71" y="111.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (845,810,072 samples, 0.33%)</title><rect x="34.8" y="149" width="3.9" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="37.77" y="159.5" ></text>
</g>
<g >
<title>do_page_fault (29,075,542 samples, 0.01%)</title><rect x="1160.4" y="37" width="0.1" height="15.0" fill="rgb(216,54,13)" rx="2" ry="2" />
<text  x="1163.40" y="47.5" ></text>
</g>
<g >
<title>[NetworkManager] (26,258,172 samples, 0.01%)</title><rect x="10.0" y="149" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>softmax (87,215,785 samples, 0.03%)</title><rect x="1167.1" y="37" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1170.06" y="47.5" ></text>
</g>
<g >
<title>cpuidle_enter_state (32,984,661 samples, 0.01%)</title><rect x="46.4" y="149" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="49.39" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (189,611,862 samples, 0.07%)</title><rect x="27.0" y="133" width="0.9" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="29.97" y="143.5" ></text>
</g>
<g >
<title>[libc.so.6] (79,149,694 samples, 0.03%)</title><rect x="48.9" y="149" width="0.3" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="51.85" y="159.5" ></text>
</g>
<g >
<title>check_preemption_disabled (54,461,358 samples, 0.02%)</title><rect x="1160.1" y="37" width="0.3" height="15.0" fill="rgb(220,73,17)" rx="2" ry="2" />
<text  x="1163.15" y="47.5" ></text>
</g>
<g >
<title>panel-8-pulseau (227,969,838 samples, 0.09%)</title><rect x="22.6" y="165" width="1.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="25.60" y="175.5" ></text>
</g>
<g >
<title>rcu_preempt (59,257,419 samples, 0.02%)</title><rect x="33.3" y="165" width="0.3" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="36.35" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irqrestore (319,952,577 samples, 0.13%)</title><rect x="1185.8" y="117" width="1.5" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1188.78" y="127.5" ></text>
</g>
<g >
<title>wpa_supplicant (1,243,690,818 samples, 0.49%)</title><rect x="1184.2" y="165" width="5.7" height="15.0" fill="rgb(233,130,31)" rx="2" ry="2" />
<text  x="1187.15" y="175.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (38,490,628 samples, 0.02%)</title><rect x="25.7" y="133" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="28.72" y="143.5" ></text>
</g>
<g >
<title>__poll (80,452,086 samples, 0.03%)</title><rect x="23.8" y="133" width="0.4" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="26.85" y="143.5" ></text>
</g>
<g >
<title>__this_cpu_preempt_check (48,004,111 samples, 0.02%)</title><rect x="1159.2" y="37" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1162.19" y="47.5" ></text>
</g>
<g >
<title>build_tokenizer (167,592,008 samples, 0.07%)</title><rect x="1182.8" y="149" width="0.8" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="1185.81" y="159.5" ></text>
</g>
<g >
<title>kworker/1:1H-kb (58,316,149 samples, 0.02%)</title><rect x="18.8" y="165" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="21.81" y="175.5" ></text>
</g>
<g >
<title>build_tokenizer (29,183,284 samples, 0.01%)</title><rect x="50.4" y="85" width="0.1" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="53.41" y="95.5" ></text>
</g>
<g >
<title>[dbus-daemon] (29,158,658 samples, 0.01%)</title><rect x="14.9" y="133" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="17.91" y="143.5" ></text>
</g>
<g >
<title>preempt_count_add (30,547,757 samples, 0.01%)</title><rect x="32.5" y="133" width="0.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="35.52" y="143.5" ></text>
</g>
<g >
<title>[unknown] (244,126,717,237 samples, 96.03%)</title><rect x="49.2" y="149" width="1133.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="52.22" y="159.5" >[unknown]</text>
</g>
<g >
<title>[unknown]  (222,855,711 samples, 0.09%)</title><rect x="10.3" y="133" width="1.0" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.31" y="143.5" ></text>
</g>
<g >
<title>memset (46,144,446 samples, 0.02%)</title><rect x="1163.9" y="53" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1166.86" y="63.5" ></text>
</g>
<g >
<title>rmsnorm (105,620,713 samples, 0.04%)</title><rect x="1166.6" y="37" width="0.5" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="1169.57" y="47.5" ></text>
</g>
<g >
<title>[unknown]  (388,393,774 samples, 0.15%)</title><rect x="16.2" y="149" width="1.8" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="19.17" y="159.5" ></text>
</g>
<g >
<title>forward (240,375,730,225 samples, 94.56%)</title><rect x="50.7" y="69" width="1115.8" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="53.74" y="79.5" >forward</text>
</g>
<g >
<title>nl_sendmsg (1,174,201,322 samples, 0.46%)</title><rect x="1184.5" y="149" width="5.4" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1187.47" y="159.5" ></text>
</g>
<g >
<title>forward (238,827,348,955 samples, 93.95%)</title><rect x="55.1" y="53" width="1108.6" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="58.12" y="63.5" >forward</text>
</g>
<g >
<title>gdbus (430,835,594 samples, 0.17%)</title><rect x="16.2" y="165" width="2.0" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="19.17" y="175.5" ></text>
</g>
<g >
<title>generate (2,901,964,324 samples, 1.14%)</title><rect x="1166.5" y="69" width="13.5" height="15.0" fill="rgb(217,59,14)" rx="2" ry="2" />
<text  x="1169.52" y="79.5" ></text>
</g>
<g >
<title>[unknown] (115,246,025 samples, 0.05%)</title><rect x="11.7" y="149" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.70" y="159.5" ></text>
</g>
<g >
<title>[unknown]  (35,905,554 samples, 0.01%)</title><rect x="22.4" y="149" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="25.39" y="159.5" ></text>
</g>
<g >
<title>forward (192,836,498 samples, 0.08%)</title><rect x="1166.6" y="53" width="0.9" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="1169.57" y="63.5" ></text>
</g>
<g >
<title>iov_iter_copy_from_user_atomic (32,242,834 samples, 0.01%)</title><rect x="30.9" y="133" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="33.94" y="143.5" ></text>
</g>
<g >
<title>kworker/u8:3-ev (291,427,215 samples, 0.11%)</title><rect x="21.0" y="165" width="1.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="24.01" y="175.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (24,617,205 samples, 0.01%)</title><rect x="11.0" y="117" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="13.99" y="127.5" ></text>
</g>
<g >
<title>handle_mm_fault (63,686,444 samples, 0.03%)</title><rect x="1161.4" y="37" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1164.42" y="47.5" ></text>
</g>
<g >
<title>unmap_page_range (88,184,965 samples, 0.03%)</title><rect x="1181.9" y="69" width="0.4" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1184.88" y="79.5" ></text>
</g>
<g >
<title>dbus-daemon (275,507,149 samples, 0.11%)</title><rect x="14.9" y="165" width="1.3" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="17.89" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (95,056,190 samples, 0.04%)</title><rect x="31.4" y="133" width="0.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="34.44" y="143.5" ></text>
</g>
<g >
<title>[unknown] (23,782,514 samples, 0.01%)</title><rect x="23.5" y="149" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="26.54" y="159.5" ></text>
</g>
<g >
<title>crc32_body (137,000,091 samples, 0.05%)</title><rect x="28.4" y="133" width="0.7" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="31.44" y="143.5" ></text>
</g>
<g >
<title>[unknown]  (128,233,733 samples, 0.05%)</title><rect x="13.8" y="133" width="0.6" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="16.83" y="143.5" ></text>
</g>
<g >
<title>kworker/0:3-eve (68,970,450 samples, 0.03%)</title><rect x="18.5" y="165" width="0.3" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="21.49" y="175.5" ></text>
</g>
<g >
<title>page_remove_rmap (63,250,191 samples, 0.02%)</title><rect x="1181.3" y="69" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1184.31" y="79.5" ></text>
</g>
<g >
<title>_raw_spin_unlock_irq (29,424,067 samples, 0.01%)</title><rect x="19.1" y="149" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="22.13" y="159.5" ></text>
</g>
<g >
<title>expf (1,762,343,857 samples, 0.69%)</title><rect x="1169.5" y="37" width="8.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1172.52" y="47.5" ></text>
</g>
<g >
<title>__asm_copy_to_user (121,874,337 samples, 0.05%)</title><rect x="24.5" y="133" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="27.47" y="143.5" ></text>
</g>
<g >
<title>ext4_mark_iloc_dirty (30,967,040 samples, 0.01%)</title><rect x="30.2" y="133" width="0.1" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="33.15" y="143.5" ></text>
</g>
</g>
</svg>
